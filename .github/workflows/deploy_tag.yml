name: Deploy

on:
  create:
    tags:
      - v*      
  push:
    branches: [ main ]
    

env:
  ECR_REPOSITORY: test-ecr
  BUILD: ${{ github.run_id }}-${{ github.run_number }}

jobs:

  deploy-api:
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: api
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build --build-arg BUILD=${{ env.BUILD }} -t $ECR_REGISTRY/$ECR_REPOSITORY:api-$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:api-$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:api-$IMAGE_TAG"

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ vars.EKS_CLUSTER_VERSION }}
        id: install


      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f deploy/api/api-service.yml
